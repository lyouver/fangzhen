<?xml version="1.0"?>
<launch>
    <!-- 
        UUV Coverage Path Execution - 兼容版本
        此launch文件设计为与compact_terrain_rexrov.launch一起使用
        不包含重复的Gazebo、RViz或机器人模型启动
    -->
    
    <!-- 参数设置 -->
    <arg name="uuv_name" default="rexrov"/>
    <arg name="model_name" default="rexrov"/>
    <arg name="use_ned_frame" default="true"/>
    <arg name="model_params_file" default="$(find uuv_trajectory_control)/config/models/rexrov/params.yaml"/>
    
    <!-- 启动推进器管理器 - 仅当compact_terrain_rexrov.launch未启动时需要 -->
    <include file="$(find uuv_thruster_manager)/launch/thruster_manager.launch">
        <arg name="uuv_name" value="$(arg uuv_name)" />
        <arg name="model_name" value="$(arg model_name)" />
    </include>
    
    <!-- 加载轨迹参数 -->
    <rosparam file="$(find underwater_coverage_planning)/scripts/guiji/trajectory_20250720_121855_ros.yaml" command="load" ns="trajectory_planner"/>
    
    <!-- 使用本地轨迹发布器 -->
    <node name="trajectory_publisher" 
          pkg="underwater_coverage_planning"
          type="trajectory_20250720_121855_publisher.py"
          output="screen">
        <param name="trajectory_file" value="$(find underwater_coverage_planning)/scripts/guiji/trajectory_20250720_121855_ros.yaml"/>
        <param name="publish_rate" value="10.0"/>
    </node>
    
    <!-- 使用无奇点轨迹控制器 -->
    <node name="trajectory_controller" 
          pkg="uuv_trajectory_control"
          type="rov_sf_controller.py"
          output="screen">
        <!-- Remap necessary topics -->
        <remap from="odom" to="$(arg uuv_name)/pose_gt"/>
        <remap from="trajectory" to="$(arg uuv_name)/dp_controller/trajectory"/>
        <remap from="input_trajectory" to="$(arg uuv_name)/dp_controller/input_trajectory"/>
        <remap from="waypoints" to="$(arg uuv_name)/dp_controller/waypoints"/>
        <remap from="error" to="$(arg uuv_name)/dp_controller/error"/>
        <remap from="reference" to="$(arg uuv_name)/dp_controller/reference"/>
        <remap from="thruster_output" to="$(arg uuv_name)/thruster_manager/input_stamped"/>
        
        <!-- 加载机器人模型参数 -->
        <rosparam file="$(arg model_params_file)" command="load"/>
        
        <!-- 控制器参数 -->
        <rosparam subst_value="true">
          saturation: 5000
          Kd: [100.0, 100.0, 100.0, 100.0, 100.0, 100.0]
          lambda: [1.0]
          c: [1.0]
          inertial_frame_id: world_ned
        </rosparam>
    </node>
    
    <!-- 使用说明 -->
    <!-- 
        使用方法:
        1. 先启动环境和机器人:
           roslaunch underwater_coverage_planning compact_terrain_rexrov.launch
           
        2. 然后在新终端启动此文件:
           roslaunch underwater_coverage_planning trajectory_20250720_121855_launch.launch
           
        注意:
        - 此launch文件不会启动Gazebo或RViz，依赖compact_terrain_rexrov.launch提供环境
        - 如果您需要单独运行，请取消注释下面的环境启动部分
    -->
    
    <!-- 
    取消注释以独立运行（不推荐）
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find underwater_coverage_planning)/worlds/compact_underwater_terrain.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
    </include>
    
    <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>
    
    <include file="$(find uuv_descriptions)/launch/upload_rexrov_default.launch">
      <arg name="x" value="-200"/>
      <arg name="y" value="-200"/>
      <arg name="z" value="-22"/>
      <arg name="namespace" value="$(arg uuv_name)"/>
      <arg name="use_ned_frame" value="true"/>
    </include>
    -->
</launch>